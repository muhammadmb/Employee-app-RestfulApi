// <auto-generated />
using System;
using EmployeeWevService.Contexsts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeWevService.Migrations
{
    [DbContext(typeof(EmployeeContexst))]
    [Migration("20201105013512_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeWevService.Entities.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<Guid>("ProId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("picUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "h@gmail.com",
                            JobTitle = "accountant",
                            Name = "hana",
                            PhoneNumber = "01200012010",
                            ProId = new Guid("a28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            picUrl = "http://nnn.com",
                            salary = 5000.0
                        },
                        new
                        {
                            EmployeeId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b36"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "s@gmail.com",
                            JobTitle = "afasfsd",
                            Name = "efsa",
                            PhoneNumber = "444444",
                            ProId = new Guid("a28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            picUrl = "http://nnn.com",
                            salary = 5000.0
                        },
                        new
                        {
                            EmployeeId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b37"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "s@gmail.com",
                            JobTitle = "a",
                            Name = "l",
                            PhoneNumber = "5555",
                            ProId = new Guid("a28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            picUrl = "http://nnn.com",
                            salary = 5000.0
                        },
                        new
                        {
                            EmployeeId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "s@gmail.com",
                            JobTitle = "f",
                            Name = "d",
                            PhoneNumber = "44444",
                            ProId = new Guid("a28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            picUrl = "http://nnn.com",
                            salary = 5000.0
                        },
                        new
                        {
                            EmployeeId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b39"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "s@gmail.com",
                            JobTitle = "e",
                            Name = "q",
                            PhoneNumber = "01001001",
                            ProId = new Guid("a28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            picUrl = "http://nnn.com",
                            salary = 5000.0
                        });
                });

            modelBuilder.Entity("EmployeeWevService.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("projects");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("a28888e9-2ba9-473a-a40f-e38cb54f9b38"),
                            Budget = 12000.0,
                            Profit = 1000.0,
                            ProjectName = "Test"
                        },
                        new
                        {
                            ProjectId = new Guid("d28888e9-2ba9-473a-d40f-e38cb54f9b38"),
                            Budget = 12000.0,
                            Profit = 1000.0,
                            ProjectName = "Test"
                        },
                        new
                        {
                            ProjectId = new Guid("d29988e9-2ba9-473a-a40f-e38cb54f9b38"),
                            Budget = 12000.0,
                            Profit = 1000.0,
                            ProjectName = "Test"
                        },
                        new
                        {
                            ProjectId = new Guid("d28888e9-2ba9-473a-a40f-e39cb54f9b37"),
                            Budget = 12000.0,
                            Profit = 1000.0,
                            ProjectName = "Test"
                        },
                        new
                        {
                            ProjectId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b31"),
                            Budget = 12000.0,
                            Profit = 1000.0,
                            ProjectName = "Test"
                        });
                });

            modelBuilder.Entity("EmployeeWevService.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeWevService.Entities.Project", "project")
                        .WithMany("employees")
                        .HasForeignKey("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
